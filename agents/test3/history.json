[
  {
    "role": "user",
    "content": "give me a python code for snake game",
    "timestamp": "2025-08-29T02:42:34.928074",
    "metadata": {}
  },
  {
    "role": "assistant",
    "content": "Below is an example Python code for a simple Snake game using the Pygame library. To run the game, make sure you have Pygame installed (you can install it via pip with \"pip install pygame\"). Then copy the code into a Python file (e.g., snake_game.py) and run it.\n\n──────────────────────────────\n#!/usr/bin/env python3\nimport pygame\nimport random\nimport sys\n\n# Initialize Pygame\npygame.init()\n\n# Screen dimensions\nWIDTH, HEIGHT = 600, 400\nCELL_SIZE = 20\n\n# Colors\nBLACK = (0, 0, 0)\nWHITE = (255, 255, 255)\nGREEN = (0, 200, 0)\nRED   = (200, 0, 0)\n\n# Set up the display\nscreen = pygame.display.set_mode((WIDTH, HEIGHT))\npygame.display.set_caption('Snake Game')\n\n# Clock to control game speed\nclock = pygame.time.Clock()\nFPS = 10\n\ndef draw_grid():\n    for x in range(0, WIDTH, CELL_SIZE):\n        pygame.draw.line(screen, WHITE, (x, 0), (x, HEIGHT))\n    for y in range(0, HEIGHT, CELL_SIZE):\n        pygame.draw.line(screen, WHITE, (0, y), (WIDTH, y))\n\ndef random_food_position(snake):\n    while True:\n        x = random.randint(0, (WIDTH - CELL_SIZE) // CELL_SIZE) * CELL_SIZE\n        y = random.randint(0, (HEIGHT - CELL_SIZE) // CELL_SIZE) * CELL_SIZE\n        if (x, y) not in snake:\n            return (x, y)\n\ndef game_over():\n    font = pygame.font.SysFont(None, 48)\n    text = font.render(\"Game Over\", True, RED)\n    text_rect = text.get_rect(center=(WIDTH//2, HEIGHT//2))\n    screen.blit(text, text_rect)\n    pygame.display.flip()\n    pygame.time.delay(2000)\n    pygame.quit()\n    sys.exit()\n\ndef main():\n    # Initial snake position and length\n    snake = [(WIDTH//2, HEIGHT//2)]\n    direction = (CELL_SIZE, 0)  # moving right initially\n\n    # Place the first food\n    food = random_food_position(snake)\n    \n    while True:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n            elif event.type == pygame.KEYDOWN:\n                # Change direction if not opposite to current direction\n                if event.key == pygame.K_UP and direction != (0, CELL_SIZE):\n                    direction = (0, -CELL_SIZE)\n                elif event.key == pygame.K_DOWN and direction != (0, -CELL_SIZE):\n                    direction = (0, CELL_SIZE)\n                elif event.key == pygame.K_LEFT and direction != (CELL_SIZE, 0):\n                    direction = (-CELL_SIZE, 0)\n                elif event.key == pygame.K_RIGHT and direction != (-CELL_SIZE, 0):\n                    direction = (CELL_SIZE, 0)\n        \n        # Calculate new head position\n        head_x, head_y = snake[0]\n        dx, dy = direction\n        new_head = (head_x + dx, head_y + dy)\n        \n        # Check collisions with walls\n        if (new_head[0] < 0 or new_head[0] >= WIDTH or \n            new_head[1] < 0 or new_head[1] >= HEIGHT):\n            game_over()\n        \n        # Check collisions with itself\n        if new_head in snake:\n            game_over()\n        \n        # Insert new head to snake\n        snake.insert(0, new_head)\n        \n        # Check if snake has found food; if not, remove tail\n        if new_head == food:\n            food = random_food_position(snake)\n        else:\n            snake.pop()\n\n        # Draw everything\n        screen.fill(BLACK)\n        # Optionally draw grid lines (you can disable if you prefer)\n        # draw_grid()\n\n        # Draw food\n        food_rect = pygame.Rect(food[0], food[1], CELL_SIZE, CELL_SIZE)\n        pygame.draw.rect(screen, RED, food_rect)\n        \n        # Draw snake\n        for segment in snake:\n            segment_rect = pygame.Rect(segment[0], segment[1], CELL_SIZE, CELL_SIZE)\n            pygame.draw.rect(screen, GREEN, segment_rect)\n\n        pygame.display.flip()\n        clock.tick(FPS)\n\nif __name__ == '__main__':\n    main()\n\n──────────────────────────────\nInstructions:\n1. Save the code in a file (for example, snake_game.py).\n2. Make sure you have Pygame installed:\n   pip install pygame\n3. Run the game:\n   python snake_game.py\n\nUse the arrow keys to control the snake. When the snake eats the food (the red square), it grows in length. The game ends if the snake hits the boundaries or itself.\n\nEnjoy your game!",
    "timestamp": "2025-08-29T02:42:43.558202",
    "metadata": {}
  }
]