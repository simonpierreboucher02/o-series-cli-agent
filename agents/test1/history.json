[
  {
    "role": "user",
    "content": "give me a python code for snake game",
    "timestamp": "2025-08-29T02:40:27.114856",
    "metadata": {}
  },
  {
    "role": "assistant",
    "content": "Below is a simple Snake game implemented in Python using the Pygame library. Make sure you have Pygame installed (pip install pygame) before running the script. Save this code to a file (for example, snake_game.py) and run it.\n\n--------------------------------------------------------------------------------\n#!/usr/bin/env python3\n\nimport pygame\nimport sys\nimport random\n\n# Initialize Pygame\npygame.init()\n\n# Screen dimensions\nWIDTH = 600\nHEIGHT = 400\nCELL_SIZE = 20\n\n# Colors\nWHITE = (255, 255, 255)\nBLACK = (0, 0, 0)\nGREEN = (0, 200, 0)\nRED = (200, 0, 0)\n\n# Create screen\nscreen = pygame.display.set_mode((WIDTH, HEIGHT))\npygame.display.set_caption(\"Snake Game\")\n\n# Clock for controlling frame rate\nclock = pygame.time.Clock()\n\n# Font for rendering text\nfont = pygame.font.SysFont(None, 36)\n\ndef draw_snake(snake_body):\n    \"\"\"Draw the snake based on the list of segments.\"\"\"\n    for segment in snake_body:\n        pygame.draw.rect(screen, GREEN, (segment[0], segment[1], CELL_SIZE, CELL_SIZE))\n\ndef generate_food(snake_body):\n    \"\"\"Generate new food coordinates not colliding with the snake.\"\"\"\n    while True:\n        x = random.randint(0, (WIDTH - CELL_SIZE) // CELL_SIZE) * CELL_SIZE\n        y = random.randint(0, (HEIGHT - CELL_SIZE) // CELL_SIZE) * CELL_SIZE\n        if [x, y] not in snake_body:\n            return (x, y)\n\ndef game_loop():\n    # Initial snake setup\n    snake_x = WIDTH // 2\n    snake_y = HEIGHT // 2\n    snake_body = [[snake_x, snake_y]]\n    snake_length = 1\n\n    # Initial movement\n    dx = 0\n    dy = 0\n\n    # Generate first food\n    food_x, food_y = generate_food(snake_body)\n\n    while True:\n        # Event handling\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n\n            elif event.type == pygame.KEYDOWN:\n                # Move the snake with arrow keys or WASD\n                if event.key in (pygame.K_UP, pygame.K_w) and dy == 0:\n                    dx, dy = 0, -CELL_SIZE\n                elif event.key in (pygame.K_DOWN, pygame.K_s) and dy == 0:\n                    dx, dy = 0, CELL_SIZE\n                elif event.key in (pygame.K_LEFT, pygame.K_a) and dx == 0:\n                    dx, dy = -CELL_SIZE, 0\n                elif event.key in (pygame.K_RIGHT, pygame.K_d) and dx == 0:\n                    dx, dy = CELL_SIZE, 0\n\n        # Move snake head\n        snake_x += dx\n        snake_y += dy\n        snake_body.insert(0, [snake_x, snake_y])\n\n        # Check if snake eats food\n        if snake_x == food_x and snake_y == food_y:\n            snake_length += 1\n            food_x, food_y = generate_food(snake_body)\n        else:\n            # If no food eaten, pop the tail\n            snake_body.pop()\n\n        # Check for collision with walls\n        if (snake_x < 0 or snake_x >= WIDTH or\n            snake_y < 0 or snake_y >= HEIGHT):\n            break  # Game over\n\n        # Check for collision with self\n        if [snake_x, snake_y] in snake_body[1:]:\n            break  # Game over\n\n        # Drawing\n        screen.fill(BLACK)\n        draw_snake(snake_body)\n        pygame.draw.rect(screen, RED, (food_x, food_y, CELL_SIZE, CELL_SIZE))\n        pygame.display.update()\n        clock.tick(10)  # Control speed (frames per second)\n\n    # Game over message\n    screen.fill(BLACK)\n    game_over_text = font.render(\"Game Over! Press any key to exit.\", True, WHITE)\n    screen.blit(game_over_text, (WIDTH // 2 - 180, HEIGHT // 2 - 20))\n    pygame.display.update()\n\n    # Wait for a key press to exit\n    while True:\n        for event in pygame.event.get():\n            if event.type == pygame.KEYDOWN or event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n\ndef main():\n    game_loop()\n\nif __name__ == \"__main__\":\n    main()\n--------------------------------------------------------------------------------\n\nHow to run:\n1. Install Pygame if you don’t have it:  \n   pip install pygame\n\n2. Save the code above into a file named, for example, snake_game.py.  \n3. Run the file:  \n   python snake_game.py\n\nUse the arrow keys (↑, ↓, ←, →) or WASD to control the snake. Enjoy!",
    "timestamp": "2025-08-29T02:40:35.376289",
    "metadata": {}
  }
]